package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")

##################################################
# This is the react scripts build... doesn't work.
##################################################

# nodejs_binary(
#     name = "reactscripts",
#     entry_point = "react-scripts/bin/react-scripts.js",
#     node_modules = "@noodles//:node_modules",
#     data = glob([
#         'src/**',
#         'public/**',
#     ]) + ['//:package.json'],
#     templated_args = ["--node_options=--preserve-symlinks"],
# )

# load(":reactscripts.bzl", "reactscripts")

# reactscripts(
#     name = "reactscripts-build",
#     srcs = glob([
#         'src/**',
#         'public/**',
#     ]) + ['//:package.json'],
# )

# This doesnt work at all.
# genrule(
#   name = "reactscriptsgen",
#   srcs = glob([
#         "src/**",
#         "public/**",
#     ]) + ["//:package.json"] + [".babelrc"] + ["@noodles//:node_modules"],
#   outs = ["build"],
#   cmd = """
#     npm run build
#     cp -R build $(@D)
#     """,
#   tags = ["local"],
# )


##################################################
# Parcel build... works with a unsandboxed genrule but not with a .bzl extension rule.
##################################################

# nodejs_binary(
#     name = "parcel",
#     entry_point = "parcel-bundler/bin/cli.js",
#     node_modules = "@noodles//:node_modules",
#     data = glob([
#         "src/**",
#         "public/**",
#     ]) + ["//:package.json"] + [".babelrc"],
#     templated_args = ["--node_options=--preserve-symlinks"],
# )

# load(":parcelgen.bzl", "parcel")

# parcel(
#     name = "parcel-build",
#     srcs = glob([
#         "src/**",
#         "public/**",
#     ]) + ["//:package.json"] + [".babelrc"],
#     entry_point = "src/index.js"
# )

# genrule(
#   name = "parcelgen",
#   srcs = glob([
#         "src/**",
#         "public/**",
#     ]) + ["//:package.json"] + [".babelrc"] + ["@noodles//:node_modules"],
#   outs = ["build"],
#   cmd = """
#     parcel build src/index.js --out-dir build
#     cp -R build $(@D)
#     """,
# #   tags = ["local"], # uncomment this to un-sandbox... build is successful with this.
# )


##################################################
# Rollup build
# This isnt finished being setup. Needs rollup configuration (complicated) in order
# to parse jsx / react / es6+
# This is taken from their example: https://github.com/bazelbuild/rules_nodejs/tree/master/examples/rollup
##################################################

# nodejs_binary(
#     name = "rollup",
#     entry_point = "rollup/bin/rollup",
#     node_modules = "@noodles//:node_modules",
# )

# load(":rollupgen.bzl", "rollup")
# rollup(
#     name = "bundle",
#     entry_point = "src/index.js",
#     srcs = glob([
#         "src/**",
#         "public/**",
#     ]) + ["//:package.json"] + [".babelrc"],
# )